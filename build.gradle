buildscript {
    ext {
        creds = {
            username = findProperty("github.user") ?: System.getenv("GITHUB_ACTOR")
            password = findProperty("github.token") ?: System.getenv("GITHUB_TOKEN")
        }
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url uri("https://maven.pkg.github.com/trevorism/gradle-acceptance-plugin")
            credentials creds
        }
    }
    dependencies {
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:2.4.5'
        classpath 'com.trevorism:gradle-acceptance-plugin:2.2.0'
    }
}

plugins {
    id("groovy") 
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.6.7"
}


apply plugin: 'com.google.cloud.tools.appengine'

group = "com.trevorism"

repositories {
    mavenCentral()
    maven {
        url uri("https://maven.pkg.github.com/trevorism/secure-http-utils")
        credentials creds
    }
}

dependencies {

    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.groovy:micronaut-runtime-groovy")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation 'io.projectreactor:reactor-core:3.5.2'
    implementation("io.micronaut:micronaut-validation")

    compileOnly("io.micronaut:micronaut-http-validation")
    compileOnly("io.micronaut.openapi:micronaut-openapi"){
        exclude module:"slf4j-nop"
    }

    implementation 'com.trevorism:secure-utils:4.0.0'
    runtimeOnly("ch.qos.logback:logback-classic")

}

application {
    mainClass.set("com.trevorism.Application")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.trevorism.*")
    }
}

tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.jvmArgs.add('-Dgroovy.parameters=true')
    groovyOptions.forkOptions.jvmArgs.add('-Dmicronaut.openapi.views.spec=rapidoc.enabled=true,swagger-ui.enabled=true,swagger-ui.theme=flattop')
}

appengine {
    stage.artifact = "${buildDir}/libs/${project.name}-all.jar"
    deploy {
        projectId = "trevorism-gcloud"
        version = "0-2-0"
    }
}